predicate table(array [int] of var int: x,array [int,int] of int: t);
array [1..12] of int: X_INTRODUCED_0_ = [1,1,1,0,0,0,1,1,0,1,0,1];
array [1..4] of int: X_INTRODUCED_1_ = [0,0,1,1];
array [1..32] of int: X_INTRODUCED_10_ = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
array [1..16] of int: X_INTRODUCED_11_ = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
var 0..1: K_0_0;
var 0..1: K_0_1;
var 0..1: K_0_2;
var 0..1: K_0_3;
var 0..1: K_1_0;
var 0..1: K_1_1;
var 0..1: K_1_2;
var 0..1: K_1_3;
var 0..1: K_2_0;
var 0..1: K_2_1;
var 0..1: K_2_2;
var 0..1: K_2_3;
var 0..1: K_3_0;
var 0..1: K_3_1;
var 0..1: K_3_2;
var 0..1: K_3_3;
var 0..1: K_0_0_0;
var 0..1: K_0_0_1;
var 0..1: K_0_0_2;
var 0..1: K_0_0_3;
var 0..1: K_0_1_0;
var 0..1: K_0_1_1;
var 0..1: K_0_1_2;
var 0..1: K_0_1_3;
var 0..1: K_0_2_0;
var 0..1: K_0_2_1;
var 0..1: K_0_2_2;
var 0..1: K_0_2_3;
var 0..1: K_0_3_0;
var 0..1: K_0_3_1;
var 0..1: K_0_3_2;
var 0..1: K_0_3_3;
var 0..1: K_1_0_0;
var 0..1: K_1_0_1;
var 0..1: K_1_0_2;
var 0..1: K_1_0_3;
var 0..1: K_1_1_0;
var 0..1: K_1_1_1;
var 0..1: K_1_1_2;
var 0..1: K_1_1_3;
var 0..1: K_1_2_0;
var 0..1: K_1_2_1;
var 0..1: K_1_2_2;
var 0..1: K_1_2_3;
var 0..1: K_1_3_0;
var 0..1: K_1_3_1;
var 0..1: K_1_3_2;
var 0..1: K_1_3_3;
var 0..1: X_0_0_0;
var 0..1: X_0_0_1;
var 0..1: X_0_0_2;
var 0..1: X_0_0_3;
var 0..1: X_0_1_0;
var 0..1: X_0_1_1;
var 0..1: X_0_1_2;
var 0..1: X_0_1_3;
var 0..1: X_0_2_0;
var 0..1: X_0_2_1;
var 0..1: X_0_2_2;
var 0..1: X_0_2_3;
var 0..1: X_0_3_0;
var 0..1: X_0_3_1;
var 0..1: X_0_3_2;
var 0..1: X_0_3_3;
var 0..1: S_1_0_0:: output_var;
var 0..1: S_1_0_1:: output_var;
var 0..1: S_1_0_2:: output_var;
var 0..1: S_1_0_3:: output_var;
var 0..1: S_1_1_0:: output_var;
var 0..1: S_1_1_1:: output_var;
var 0..1: S_1_1_2:: output_var;
var 0..1: S_1_1_3:: output_var;
var 0..1: S_1_2_0:: output_var;
var 0..1: S_1_2_1:: output_var;
var 0..1: S_1_2_2:: output_var;
var 0..1: S_1_2_3:: output_var;
var 0..1: S_1_3_0:: output_var;
var 0..1: S_1_3_1:: output_var;
var 0..1: S_1_3_2:: output_var;
var 0..1: S_1_3_3:: output_var;
array [1..32] of var int: X_INTRODUCED_8_ ::var_is_introduced  = [X_0_3_2,X_0_3_1,X_0_3_0,X_0_2_3,X_0_2_2,X_0_2_1,X_0_2_0,X_0_1_3,X_0_1_2,X_0_1_1,X_0_1_0,X_0_0_3,X_0_0_2,X_0_0_1,X_0_0_0,K_3_3,K_3_2,K_3_1,K_3_0,K_2_3,K_2_2,K_2_1,K_2_0,K_1_3,K_1_2,K_1_1,K_1_0,K_0_3,K_0_2,K_0_1,K_0_0,X_0_3_3];
array [1..16] of var int: X_INTRODUCED_12_ ::var_is_introduced  = [S_1_0_1,S_1_0_2,S_1_0_3,S_1_1_0,S_1_1_1,S_1_1_2,S_1_1_3,S_1_2_0,S_1_2_1,S_1_2_2,S_1_2_3,S_1_3_0,S_1_3_1,S_1_3_2,S_1_3_3,S_1_0_0];
array [1..16] of var int: X_INTRODUCED_14_ ::var_is_introduced  = [S_1_0_0,S_1_0_1,S_1_0_2,S_1_0_3,S_1_1_0,S_1_1_1,S_1_1_2,S_1_1_3,S_1_2_0,S_1_2_1,S_1_2_2,S_1_2_3,S_1_3_0,S_1_3_1,S_1_3_2,S_1_3_3];
constraint table([K_0_0,K_0_0_0,K_0_0_1],X_INTRODUCED_0_);
constraint table([K_1_0,K_0_0_2,K_0_0_3],X_INTRODUCED_0_);
constraint table([K_2_0,K_0_1_0,K_0_1_1],X_INTRODUCED_0_);
constraint table([K_3_0,K_0_1_2,K_0_1_3],X_INTRODUCED_0_);
constraint table([K_0_1,K_0_2_0,K_0_2_1],X_INTRODUCED_0_);
constraint table([K_1_1,K_0_2_2,K_0_2_3],X_INTRODUCED_0_);
constraint table([K_2_1,K_0_3_0,K_0_3_1],X_INTRODUCED_0_);
constraint table([K_3_1,K_0_3_2,K_0_3_3],X_INTRODUCED_0_);
constraint table([K_0_2,K_1_0_0,K_1_0_1],X_INTRODUCED_0_);
constraint table([K_1_2,K_1_0_2,K_1_0_3],X_INTRODUCED_0_);
constraint table([K_2_2,K_1_1_0,K_1_1_1],X_INTRODUCED_0_);
constraint table([K_3_2,K_1_1_2,K_1_1_3],X_INTRODUCED_0_);
constraint table([K_0_3,K_1_2_0,K_1_2_1],X_INTRODUCED_0_);
constraint table([K_1_3,K_1_2_2,K_1_2_3],X_INTRODUCED_0_);
constraint table([K_2_3,K_1_3_0,K_1_3_1],X_INTRODUCED_0_);
constraint table([K_3_3,K_1_3_2,K_1_3_3],X_INTRODUCED_0_);
constraint table([X_0_0_0,S_1_0_0],X_INTRODUCED_1_);
constraint table([X_0_0_1,S_1_0_1],X_INTRODUCED_1_);
constraint table([X_0_0_2,S_1_0_2],X_INTRODUCED_1_);
constraint table([X_0_0_3,S_1_0_3],X_INTRODUCED_1_);
constraint table([X_0_1_0,S_1_1_0],X_INTRODUCED_1_);
constraint table([X_0_1_1,S_1_1_1],X_INTRODUCED_1_);
constraint table([X_0_1_2,S_1_1_2],X_INTRODUCED_1_);
constraint table([X_0_1_3,S_1_1_3],X_INTRODUCED_1_);
constraint table([X_0_2_0,S_1_2_0],X_INTRODUCED_1_);
constraint table([X_0_2_1,S_1_2_1],X_INTRODUCED_1_);
constraint table([X_0_2_2,S_1_2_2],X_INTRODUCED_1_);
constraint table([X_0_2_3,S_1_2_3],X_INTRODUCED_1_);
constraint table([X_0_3_0,S_1_3_0],X_INTRODUCED_1_);
constraint table([X_0_3_1,S_1_3_1],X_INTRODUCED_1_);
constraint table([X_0_3_2,S_1_3_2],X_INTRODUCED_1_);
constraint table([X_0_3_3,S_1_3_3],X_INTRODUCED_1_);
constraint int_lin_eq([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[S_1_3_2,S_1_3_1,S_1_3_0,S_1_2_3,S_1_2_2,S_1_2_1,S_1_2_0,S_1_1_3,S_1_1_2,S_1_1_1,S_1_1_0,S_1_0_3,S_1_0_2,S_1_0_1,S_1_0_0,S_1_3_3],0);
constraint int_lin_le(X_INTRODUCED_10_,X_INTRODUCED_8_,-1);
constraint int_lin_le(X_INTRODUCED_11_,X_INTRODUCED_12_,-1);
solve :: int_search(X_INTRODUCED_14_,smallest,indomain_min,complete) satisfy;
